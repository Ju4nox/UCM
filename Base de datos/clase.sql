CREATE TABLE JMRP_USUARIO(
    COD_USUARIO NUMBER,
    NOMBRE_USUARIO VARCHAR2(25),
    APELLIDO1_USUARIO VARCHAR2(25),
    APELLIDO2_USUARIO VARCHAR2(25),
    CONSTRAINT PK_JMRP_USUARIO PRIMARY KEY(COD_USUARIO)
);

--ESTRUCTURA DE UN PA
CREATE OR REPLACE PROCEDURE JMRP_CARGA_USUARIOS(
    --PARAMETROS QUE RECIBIRA EL PROCEDIMIENTO SEPARADO POR COMAS
    COD_USUARIO_P NUMBER,
    NOMBRE_USUARIO_P VARCHAR2,
    APELLIDO1_USUARIO_P VARCHAR2,
    APELLIDO2_USUARIO_P VARCHAR2
)
IS
-- SI REQUIRE VARIABLES LOCALES, VAN ACÁ, SI NO, SE OBVIA
BEGIN
    -- CUERPO DEL PROCEDIMIENTO (ACCIONES)
    INSERT INTO JMRP_USUARIO(COD_USUARIO, NOMBRE_USUARIO, APELLIDO1_USUARIO, APELLIDO2_USUARIO)
    VALUES(COD_USUARIO_P, NOMBRE_USUARIO_P, APELLIDO1_USUARIO_P, APELLIDO2_USUARIO_P);
END;

BEGIN
    JMRP_CARGA_USUARIOS(1,'JUAN','ROJAS','PARADA');
    JMRP_CARGA_USUARIOS(2,'MACARENA','URBINA','FIGUEROA');
    JMRP_CARGA_USUARIOS(3,'MARCELA','PEREZ','BASTIAS');
END;

SELECT *
FROM JMRP_USUARIO;


-- TAREA 1 PROCEDIMIENTOS


--ESTRUCTURA DE UN PA
CREATE OR REPLACE PROCEDURE JMRP_ELIMINA_USUARIOS(
    --PARAMETROS QUE RECIBIRA EL PROCEDIMIENTO SEPARADO POR COMAS
    COD_USUARIO_P NUMBER
)
IS
-- SI REQUIRE VARIABLES LOCALES, VAN ACÁ, SI NO, SE OBVIA
BEGIN
    -- CUERPO DEL PROCEDIMIENTO (ACCIONES)
    DELETE FROM JMRP_USUARIO
    WHERE(COD_USUARIO = COD_USUARIO_P);
END;

BEGIN
    JMRP_ELIMINA_USUARIOS(1);
END;

SELECT *
FROM JMRP_USUARIO;

-- TAREA 2 PROCEDIMIENTOS


SELECT *
FROM JMRP_USUARIO;

--ESTRUCTURA DE UN PA
CREATE OR REPLACE PROCEDURE JMRP_MODIFICA_USUARIOS(
    --PARAMETROS QUE RECIBIRA EL PROCEDIMIENTO SEPARADO POR COMAS
    COD_USUARIO_P NUMBER,
    NOMBRE_USUARIO_P VARCHAR2,
    APELLIDO1_USUARIO_P VARCHAR2,
    APELLIDO2_USUARIO_P VARCHAR2
)
IS
-- SI REQUIRE VARIABLES LOCALES, VAN ACÁ, SI NO, SE OBVIA
BEGIN
    -- CUERPO DEL PROCEDIMIENTO (ACCIONES)
    UPDATE JMRP_USUARIO SET
    NOMBRE_USUARIO = NOMBRE_USUARIO_P,
    APELLIDO1_USUARIO = APELLIDO1_USUARIO_P,
    APELLIDO2_USUARIO = APELLIDO2_USUARIO_P
    WHERE(COD_USUARIO = COD_USUARIO_P);
END;

BEGIN
    JMRP_MODIFICA_USUARIOS(1,'EDUARDO','CARRANZA','ROJAS');
END;

SELECT *
FROM JMRP_USUARIO;

-- TAREA 3

create or replace PROCEDURE JMRP_IUD_USUARIOS(
    --PARAMETROS QUE RECIBIRA EL PROCEDIMIENTO SEPARADO POR COMAS
    OPCION VARCHAR2,
    COD_USUARIO_P NUMBER,
    NOMBRE_USUARIO_P VARCHAR2,
    APELLIDO1_USUARIO_P VARCHAR2,
    APELLIDO2_USUARIO_P VARCHAR2
)
IS
-- SI REQUIRE VARIABLES LOCALES, VAN ACÁ, SI NO, SE OBVIA
BEGIN
    LOCK TABLE CACB_USUARIO IN ROW EXCLUSIVE MODE;
    -- CUERPO DEL PROCEDIMIENTO (ACCIONES)
    IF(UPPER(OPCION) = 'I') THEN
        
        INSERT INTO JMRP_USUARIO(COD_USUARIO, NOMBRE_USUARIO, APELLIDO1_USUARIO, APELLIDO2_USUARIO)
        VALUES(COD_USUARIO_P, NOMBRE_USUARIO_P, APELLIDO1_USUARIO_P, APELLIDO2_USUARIO_P);

    ELSIF(UPPER(OPCION) = 'U') THEN

        UPDATE JMRP_USUARIO SET
        NOMBRE_USUARIO = NOMBRE_USUARIO_P,
        APELLIDO1_USUARIO = APELLIDO1_USUARIO_P,
        APELLIDO2_USUARIO = APELLIDO2_USUARIO_P
        WHERE(COD_USUARIO = COD_USUARIO_P);

    ELSIF(UPPER(OPCION) = 'D') THEN

        DELETE FROM JMRP_USUARIO
        WHERE(COD_USUARIO = COD_USUARIO_P);
    END IF;

    COMMIT;
        EXCEPTION
            WHEN STORAGE_ERROR THEN
            RAISE_APPLICATION_ERROR(-6500, 'Se acabó la memoria, o es corrupta');
            WHEN PROGRAM_ERROR THEN
			RAISE_APPLICATION_ERROR(-6501,'Error en la transacción, no se guardaron cambios');
            WHEN DUP_VAL_ON_INDEX THEN
            RAISE_APPLICATION_ERROR(-1, 'El programa intentó insertar valores duplicados en una columna que está restringida por un índice único');
            WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20010,'Ocurrió un problema inesperado');
        ROLLBACK;
END;



BEGIN
    JMRP_IUD_USUARIOS('i',4, 'PABLO', 'ROMERO', 'CASTRO');
END;

BEGIN
    JMRP_IUD_USUARIOS('d',4,'PABLO', 'ROMERO', 'CASTRO');
END;

BEGIN
    JMRP_IUD_USUARIOS('u',4,'PEDRO', 'ROMERO', 'CASTRO');
END;
